{"version":3,"sources":["api.ts","components/TodoContext/TodoContext.tsx","components/TodoItems/TodoItems.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoContext","React","createContext","selectedTodo","setSelectedTodo","todos","setTodos","loader","setLoader","query","setQuery","selectedUser","setSelectedUser","selectedSelect","setSelect","TodoProvider","children","useState","useEffect","userId","result","finally","response","value","useMemo","Provider","TodoItems","todo","useContext","isSelectedTodo","id","className","classNames","completed","title","type","onClick","TodoList","allTodos","filter","toLowerCase","includes","active","filteredTodos","map","TodoFilter","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.201cadd6.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { getTodos, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Prop = {\n  selectedTodo: Todo | null,\n  setSelectedTodo: (isSelected: Todo | null) => void,\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n  loader: boolean,\n  setLoader: (loader: boolean) => void,\n  query: string,\n  setQuery: (query: string) => void,\n  selectedUser: User | null,\n  setSelectedUser: (selectedUser: User) => void,\n  selectedSelect: string,\n  setSelect: (selectedSelect: string) => void\n};\n\nexport const TodoContext = React.createContext<Prop>({\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n  todos: [],\n  setTodos: () => {},\n  loader: false,\n  setLoader: () => {},\n  query: '',\n  setQuery: () => {},\n  selectedUser: null,\n  setSelectedUser: () => {},\n  selectedSelect: '',\n  setSelect: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode\n};\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [query, setQuery] = useState('');\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedSelect, setSelect] = useState('');\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos()\n      .then((result => {\n        setTodos(result);\n      }))\n      .finally(() => setLoader(false));\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then((response => {\n          setSelectedUser(response);\n        }));\n    }\n  }, [selectedTodo]);\n\n  const value = useMemo(() => ({\n    selectedTodo,\n    setSelectedTodo,\n    todos,\n    setTodos,\n    loader,\n    setLoader,\n    query,\n    setQuery,\n    selectedUser,\n    setSelectedUser,\n    selectedSelect,\n    setSelect,\n  }\n  ), [loader, query, selectedSelect, selectedTodo, selectedUser, todos]);\n\n  return (\n    <TodoContext.Provider value={value}>\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../TodoContext/TodoContext';\n\ntype TodoElementProps = {\n  todo: Todo;\n};\n\nexport const TodoItems:React.FC<TodoElementProps> = ({ todo }) => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodoContext);\n\n  const isSelectedTodo = selectedTodo?.id === todo.id;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        <i className={classNames('', { 'fas fa-check': todo.completed })} />\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames('', {\n          'has-text-success': todo.completed,\n          'has-text-danger': !todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            setSelectedTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far fa-eye',\n              {\n                'fa-eye-slash': isSelectedTodo,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoContext } from '../TodoContext/TodoContext';\nimport { TodoItems } from '../TodoItems/TodoItems';\n\nexport const TodoList: React.FC = () => {\n  const {\n    todos,\n    query,\n    selectedSelect,\n  } = useContext(TodoContext);\n\n  const filteredTodos = () => {\n    const allTodos = todos.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n    const completed = allTodos.filter(todo => todo.completed === true);\n    const active = allTodos.filter(todo => !todo.completed);\n\n    if (selectedSelect === 'active') {\n      return active;\n    }\n\n    if (selectedSelect === 'completed') {\n      return completed;\n    }\n\n    return allTodos;\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos().map(todo => (\n          <TodoItems\n            todo={todo}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodoContext } from '../TodoContext/TodoContext';\n\nexport const TodoFilter = () => {\n  const {\n    setSelect,\n    setQuery,\n    query,\n  } = useContext(TodoContext);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setSelect(event.currentTarget.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../TodoContext/TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    selectedTodo,\n    setSelectedTodo,\n    selectedUser,\n    loader,\n  } = useContext(TodoContext);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loader\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setSelectedTodo(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo?.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoContext, TodoProvider } from './components/TodoContext/TodoContext';\n\nexport const App: React.FC = () => {\n  const {\n    selectedUser,\n  } = useContext(TodoContext);\n\n  return (\n    <>\n      <TodoProvider>\n        <div className=\"section\">\n          <div className=\"container\">\n            <div className=\"box\">\n              <h1 className=\"title\">Todos:</h1>\n\n              <div className=\"block\">\n                <TodoFilter />\n              </div>\n\n              <div className=\"block\">\n                <TodoList />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {selectedUser\n      && (\n        <TodoModal />\n      )}\n      </TodoProvider>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}